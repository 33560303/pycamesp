# Form implementation generated from reading ui file 'camflasher.ui'
#
# Created by: PyQt6 UI code generator 6.2.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_CamFlasher(object):
    def setupUi(self, CamFlasher):
        CamFlasher.setObjectName("CamFlasher")
        CamFlasher.resize(800, 600)
        CamFlasher.setAcceptDrops(True)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/camflasher.ico"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        CamFlasher.setWindowIcon(icon)
        self.main_layout = QtWidgets.QWidget(CamFlasher)
        self.main_layout.setObjectName("main_layout")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.main_layout)
        self.gridLayout_2.setContentsMargins(3, 3, 3, 3)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.tabs_link = QtWidgets.QTabWidget(self.main_layout)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tabs_link.sizePolicy().hasHeightForWidth())
        self.tabs_link.setSizePolicy(sizePolicy)
        self.tabs_link.setFocusPolicy(QtCore.Qt.FocusPolicy.ClickFocus)
        self.tabs_link.setTabPosition(QtWidgets.QTabWidget.TabPosition.North)
        self.tabs_link.setTabShape(QtWidgets.QTabWidget.TabShape.Rounded)
        self.tabs_link.setUsesScrollButtons(False)
        self.tabs_link.setTabBarAutoHide(False)
        self.tabs_link.setObjectName("tabs_link")
        self.tab_serial = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tab_serial.sizePolicy().hasHeightForWidth())
        self.tab_serial.setSizePolicy(sizePolicy)
        self.tab_serial.setObjectName("tab_serial")
        self.gridLayout = QtWidgets.QGridLayout(self.tab_serial)
        self.gridLayout.setContentsMargins(0, 0, 0, 0)
        self.gridLayout.setSpacing(0)
        self.gridLayout.setObjectName("gridLayout")
        self.label_serial_port = QtWidgets.QLabel(self.tab_serial)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_serial_port.sizePolicy().hasHeightForWidth())
        self.label_serial_port.setSizePolicy(sizePolicy)
        self.label_serial_port.setObjectName("label_serial_port")
        self.gridLayout.addWidget(self.label_serial_port, 0, 0, 1, 1)
        self.combo_port = QtWidgets.QComboBox(self.tab_serial)
        self.combo_port.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.combo_port.sizePolicy().hasHeightForWidth())
        self.combo_port.setSizePolicy(sizePolicy)
        self.combo_port.setMinimumSize(QtCore.QSize(0, 26))
        self.combo_port.setFocusPolicy(QtCore.Qt.FocusPolicy.NoFocus)
        self.combo_port.setObjectName("combo_port")
        self.gridLayout.addWidget(self.combo_port, 0, 1, 1, 1)
        self.chk_rts_dtr = QtWidgets.QCheckBox(self.tab_serial)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Maximum, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.chk_rts_dtr.sizePolicy().hasHeightForWidth())
        self.chk_rts_dtr.setSizePolicy(sizePolicy)
        self.chk_rts_dtr.setFocusPolicy(QtCore.Qt.FocusPolicy.NoFocus)
        self.chk_rts_dtr.setObjectName("chk_rts_dtr")
        self.gridLayout.addWidget(self.chk_rts_dtr, 0, 3, 1, 1)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout.addItem(spacerItem, 0, 2, 1, 1)
        self.button_serial_open = QtWidgets.QPushButton(self.tab_serial)
        self.button_serial_open.setObjectName("button_serial_open")
        self.gridLayout.addWidget(self.button_serial_open, 0, 5, 1, 1)
        spacerItem1 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout.addItem(spacerItem1, 0, 4, 1, 1)
        self.tabs_link.addTab(self.tab_serial, "")
        self.tab_telnet = QtWidgets.QWidget()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.tab_telnet.sizePolicy().hasHeightForWidth())
        self.tab_telnet.setSizePolicy(sizePolicy)
        self.tab_telnet.setFocusPolicy(QtCore.Qt.FocusPolicy.NoFocus)
        self.tab_telnet.setObjectName("tab_telnet")
        self.gridLayout_3 = QtWidgets.QGridLayout(self.tab_telnet)
        self.gridLayout_3.setContentsMargins(0, 0, 0, 0)
        self.gridLayout_3.setObjectName("gridLayout_3")
        spacerItem2 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_3.addItem(spacerItem2, 0, 5, 1, 1)
        self.label_telnet_host = QtWidgets.QLabel(self.tab_telnet)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_telnet_host.sizePolicy().hasHeightForWidth())
        self.label_telnet_host.setSizePolicy(sizePolicy)
        self.label_telnet_host.setObjectName("label_telnet_host")
        self.gridLayout_3.addWidget(self.label_telnet_host, 0, 0, 1, 1)
        self.combo_telnet_host = QtWidgets.QComboBox(self.tab_telnet)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.MinimumExpanding, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.combo_telnet_host.sizePolicy().hasHeightForWidth())
        self.combo_telnet_host.setSizePolicy(sizePolicy)
        self.combo_telnet_host.setFocusPolicy(QtCore.Qt.FocusPolicy.TabFocus)
        self.combo_telnet_host.setEditable(True)
        self.combo_telnet_host.setObjectName("combo_telnet_host")
        self.gridLayout_3.addWidget(self.combo_telnet_host, 0, 1, 1, 1)
        self.label_telnet_port = QtWidgets.QLabel(self.tab_telnet)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.label_telnet_port.sizePolicy().hasHeightForWidth())
        self.label_telnet_port.setSizePolicy(sizePolicy)
        self.label_telnet_port.setMinimumSize(QtCore.QSize(0, 26))
        self.label_telnet_port.setObjectName("label_telnet_port")
        self.gridLayout_3.addWidget(self.label_telnet_port, 0, 3, 1, 1)
        self.edit_telnet_port = QtWidgets.QSpinBox(self.tab_telnet)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.MinimumExpanding)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.edit_telnet_port.sizePolicy().hasHeightForWidth())
        self.edit_telnet_port.setSizePolicy(sizePolicy)
        self.edit_telnet_port.setMinimumSize(QtCore.QSize(80, 0))
        self.edit_telnet_port.setFocusPolicy(QtCore.Qt.FocusPolicy.NoFocus)
        self.edit_telnet_port.setMinimum(10)
        self.edit_telnet_port.setMaximum(65535)
        self.edit_telnet_port.setProperty("value", 23)
        self.edit_telnet_port.setObjectName("edit_telnet_port")
        self.gridLayout_3.addWidget(self.edit_telnet_port, 0, 4, 1, 1)
        self.button_telnet_connect = QtWidgets.QPushButton(self.tab_telnet)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.button_telnet_connect.sizePolicy().hasHeightForWidth())
        self.button_telnet_connect.setSizePolicy(sizePolicy)
        self.button_telnet_connect.setFocusPolicy(QtCore.Qt.FocusPolicy.NoFocus)
        self.button_telnet_connect.setObjectName("button_telnet_connect")
        self.gridLayout_3.addWidget(self.button_telnet_connect, 0, 6, 1, 1)
        spacerItem3 = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Minimum)
        self.gridLayout_3.addItem(spacerItem3, 0, 2, 1, 1)
        self.tabs_link.addTab(self.tab_telnet, "")
        self.gridLayout_2.addWidget(self.tabs_link, 0, 0, 1, 1)
        self.output = QtWidgets.QTextBrowser(self.main_layout)
        self.output.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Minimum, QtWidgets.QSizePolicy.Policy.Minimum)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.output.sizePolicy().hasHeightForWidth())
        self.output.setSizePolicy(sizePolicy)
        font = QtGui.QFont()
        font.setFamily("Courier")
        self.output.setFont(font)
        self.output.viewport().setProperty("cursor", QtGui.QCursor(QtCore.Qt.CursorShape.ArrowCursor))
        self.output.setFocusPolicy(QtCore.Qt.FocusPolicy.ClickFocus)
        self.output.setAcceptDrops(False)
        self.output.setFrameShape(QtWidgets.QFrame.Shape.StyledPanel)
        self.output.setFrameShadow(QtWidgets.QFrame.Shadow.Sunken)
        self.output.setLineWidth(0)
        self.output.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarPolicy.ScrollBarAlwaysOff)
        self.output.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarPolicy.ScrollBarAlwaysOff)
        self.output.setReadOnly(False)
        self.output.setObjectName("output")
        self.gridLayout_2.addWidget(self.output, 1, 0, 1, 1)
        CamFlasher.setCentralWidget(self.main_layout)
        self.menu_bar = QtWidgets.QMenuBar(CamFlasher)
        self.menu_bar.setGeometry(QtCore.QRect(0, 0, 800, 24))
        self.menu_bar.setObjectName("menu_bar")
        self.menu_flasher = QtWidgets.QMenu(self.menu_bar)
        self.menu_flasher.setObjectName("menu_flasher")
        self.menu_console = QtWidgets.QMenu(self.menu_bar)
        self.menu_console.setObjectName("menu_console")
        self.menu_info = QtWidgets.QMenu(self.menu_bar)
        self.menu_info.setObjectName("menu_info")
        self.menu_upload = QtWidgets.QMenu(self.menu_bar)
        self.menu_upload.setObjectName("menu_upload")
        CamFlasher.setMenuBar(self.menu_bar)
        self.action_flash = QtGui.QAction(CamFlasher)
        self.action_flash.setObjectName("action_flash")
        self.action_copy = QtGui.QAction(CamFlasher)
        self.action_copy.setObjectName("action_copy")
        self.action_paste = QtGui.QAction(CamFlasher)
        self.action_paste.setObjectName("action_paste")
        self.action_pause = QtGui.QAction(CamFlasher)
        self.action_pause.setObjectName("action_pause")
        self.action_resume = QtGui.QAction(CamFlasher)
        self.action_resume.setObjectName("action_resume")
        self.action_about = QtGui.QAction(CamFlasher)
        self.action_about.setObjectName("action_about")
        self.action_font = QtGui.QAction(CamFlasher)
        self.action_font.setObjectName("action_font")
        self.action_option = QtGui.QAction(CamFlasher)
        self.action_option.setObjectName("action_option")
        self.action_upload_shell = QtGui.QAction(CamFlasher)
        self.action_upload_shell.setObjectName("action_upload_shell")
        self.action_upload_server = QtGui.QAction(CamFlasher)
        self.action_upload_server.setObjectName("action_upload_server")
        self.action_upload_editor = QtGui.QAction(CamFlasher)
        self.action_upload_editor.setObjectName("action_upload_editor")
        self.action_upload_files = QtGui.QAction(CamFlasher)
        self.action_upload_files.setObjectName("action_upload_files")
        self.action_upload_zip = QtGui.QAction(CamFlasher)
        self.action_upload_zip.setObjectName("action_upload_zip")
        self.menu_flasher.addAction(self.action_flash)
        self.menu_console.addAction(self.action_copy)
        self.menu_console.addAction(self.action_paste)
        self.menu_console.addAction(self.action_pause)
        self.menu_console.addAction(self.action_resume)
        self.menu_console.addAction(self.action_option)
        self.menu_info.addAction(self.action_about)
        self.menu_upload.addAction(self.action_upload_shell)
        self.menu_upload.addAction(self.action_upload_server)
        self.menu_bar.addAction(self.menu_flasher.menuAction())
        self.menu_bar.addAction(self.menu_upload.menuAction())
        self.menu_bar.addAction(self.menu_console.menuAction())
        self.menu_bar.addAction(self.menu_info.menuAction())

        self.retranslateUi(CamFlasher)
        self.tabs_link.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(CamFlasher)

    def retranslateUi(self, CamFlasher):
        _translate = QtCore.QCoreApplication.translate
        CamFlasher.setWindowTitle(_translate("CamFlasher", "CamFlasher"))
        self.tabs_link.setToolTip(_translate("CamFlasher", "Select serial communication or telnet connection"))
        self.label_serial_port.setText(_translate("CamFlasher", "  Port  "))
        self.combo_port.setToolTip(_translate("CamFlasher", "Select device serial port"))
        self.chk_rts_dtr.setToolTip(_translate("CamFlasher", "Check this case if the dialog not working (depend of the hardware)"))
        self.chk_rts_dtr.setText(_translate("CamFlasher", "  RTS/DTR "))
        self.button_serial_open.setToolTip(_translate("CamFlasher", "Open or close serial port"))
        self.button_serial_open.setText(_translate("CamFlasher", "Open"))
        self.tabs_link.setTabText(self.tabs_link.indexOf(self.tab_serial), _translate("CamFlasher", "Serial"))
        self.label_telnet_host.setText(_translate("CamFlasher", "  Host "))
        self.combo_telnet_host.setToolTip(_translate("CamFlasher", "Ip address, host name to connect to telnet"))
        self.label_telnet_port.setText(_translate("CamFlasher", "Port"))
        self.edit_telnet_port.setToolTip(_translate("CamFlasher", "Telnet port"))
        self.button_telnet_connect.setToolTip(_translate("CamFlasher", "Connect or disconnect to telnet"))
        self.button_telnet_connect.setText(_translate("CamFlasher", "Connect"))
        self.tabs_link.setTabText(self.tabs_link.indexOf(self.tab_telnet), _translate("CamFlasher", "Telnet"))
        self.menu_flasher.setTitle(_translate("CamFlasher", "Flasher"))
        self.menu_console.setTitle(_translate("CamFlasher", "Console"))
        self.menu_info.setTitle(_translate("CamFlasher", "Info"))
        self.menu_upload.setTitle(_translate("CamFlasher", "Upload"))
        self.action_flash.setText(_translate("CamFlasher", "Esptool.py"))
        self.action_copy.setText(_translate("CamFlasher", " Copy"))
        self.action_paste.setText(_translate("CamFlasher", " Paste"))
        self.action_pause.setText(_translate("CamFlasher", " Pause"))
        self.action_resume.setText(_translate("CamFlasher", " Resume"))
        self.action_about.setText(_translate("CamFlasher", "About"))
        self.action_font.setText(_translate("CamFlasher", " Font"))
        self.action_option.setText(_translate("CamFlasher", " Option"))
        self.action_upload_shell.setText(_translate("CamFlasher", "Upload shell"))
        self.action_upload_server.setText(_translate("CamFlasher", "Upload server"))
        self.action_upload_editor.setText(_translate("CamFlasher", "Upload editor"))
        self.action_upload_files.setText(_translate("CamFlasher", "Upload files"))
        self.action_upload_zip.setText(_translate("CamFlasher", "Upload zip"))
