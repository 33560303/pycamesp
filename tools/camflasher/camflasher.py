# Form implementation generated from reading ui file 'camflasher.ui'
#
# Created by: PyQt6 UI code generator 6.2.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_win_main(object):
    def setupUi(self, win_main):
        win_main.setObjectName("win_main")
        win_main.resize(589, 406)
        win_main.setContextMenuPolicy(QtCore.Qt.ContextMenuPolicy.DefaultContextMenu)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap("icons/camflasher.ico"), QtGui.QIcon.Mode.Normal, QtGui.QIcon.State.Off)
        win_main.setWindowIcon(icon)
        self.lay_window = QtWidgets.QWidget(win_main)
        self.lay_window.setObjectName("lay_window")
        self.gridLayout_2 = QtWidgets.QGridLayout(self.lay_window)
        self.gridLayout_2.setContentsMargins(5, 5, 5, 5)
        self.gridLayout_2.setObjectName("gridLayout_2")
        self.gridLayout = QtWidgets.QGridLayout()
        self.gridLayout.setObjectName("gridLayout")
        self.lbl_port = QtWidgets.QLabel(self.lay_window)
        self.lbl_port.setMaximumSize(QtCore.QSize(80, 16777215))
        self.lbl_port.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.lbl_port.setObjectName("lbl_port")
        self.gridLayout.addWidget(self.lbl_port, 1, 0, 1, 1)
        self.cbo_port = QtWidgets.QComboBox(self.lay_window)
        self.cbo_port.setObjectName("cbo_port")
        self.gridLayout.addWidget(self.cbo_port, 1, 1, 1, 2)
        self.chk_erase = QtWidgets.QCheckBox(self.lay_window)
        self.chk_erase.setObjectName("chk_erase")
        self.gridLayout.addWidget(self.chk_erase, 1, 6, 1, 1)
        self.cbo_baud = QtWidgets.QComboBox(self.lay_window)
        self.cbo_baud.setObjectName("cbo_baud")
        self.gridLayout.addWidget(self.cbo_baud, 1, 4, 1, 2)
        self.lbl_firmware = QtWidgets.QLabel(self.lay_window)
        self.lbl_firmware.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.lbl_firmware.setObjectName("lbl_firmware")
        self.gridLayout.addWidget(self.lbl_firmware, 0, 0, 1, 1)
        self.lbl_baud = QtWidgets.QLabel(self.lay_window)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Preferred, QtWidgets.QSizePolicy.Policy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.lbl_baud.sizePolicy().hasHeightForWidth())
        self.lbl_baud.setSizePolicy(sizePolicy)
        self.lbl_baud.setMaximumSize(QtCore.QSize(16777215, 16777213))
        self.lbl_baud.setLayoutDirection(QtCore.Qt.LayoutDirection.LeftToRight)
        self.lbl_baud.setAlignment(QtCore.Qt.AlignmentFlag.AlignRight|QtCore.Qt.AlignmentFlag.AlignTrailing|QtCore.Qt.AlignmentFlag.AlignVCenter)
        self.lbl_baud.setObjectName("lbl_baud")
        self.gridLayout.addWidget(self.lbl_baud, 1, 3, 1, 1)
        self.but_flash = QtWidgets.QPushButton(self.lay_window)
        font = QtGui.QFont()
        font.setBold(False)
        font.setWeight(50)
        self.but_flash.setFont(font)
        self.but_flash.setObjectName("but_flash")
        self.gridLayout.addWidget(self.but_flash, 1, 7, 1, 1)
        self.but_firmware = QtWidgets.QPushButton(self.lay_window)
        self.but_firmware.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Policy.Fixed, QtWidgets.QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.but_firmware.sizePolicy().hasHeightForWidth())
        self.but_firmware.setSizePolicy(sizePolicy)
        self.but_firmware.setAcceptDrops(True)
        self.but_firmware.setObjectName("but_firmware")
        self.gridLayout.addWidget(self.but_firmware, 0, 7, 1, 1)
        self.txt_firmware = QtWidgets.QLineEdit(self.lay_window)
        self.txt_firmware.setObjectName("txt_firmware")
        self.gridLayout.addWidget(self.txt_firmware, 0, 1, 1, 6)
        self.gridLayout_2.addLayout(self.gridLayout, 0, 0, 1, 1)
        self.txt_result = QtWidgets.QTextBrowser(self.lay_window)
        font = QtGui.QFont()
        font.setFamily("Courier")
        self.txt_result.setFont(font)
        self.txt_result.setObjectName("txt_result")
        self.gridLayout_2.addWidget(self.txt_result, 1, 0, 1, 1)
        win_main.setCentralWidget(self.lay_window)

        self.retranslateUi(win_main)
        QtCore.QMetaObject.connectSlotsByName(win_main)
        win_main.setTabOrder(self.txt_firmware, self.but_firmware)
        win_main.setTabOrder(self.but_firmware, self.cbo_port)
        win_main.setTabOrder(self.cbo_port, self.cbo_baud)
        win_main.setTabOrder(self.cbo_baud, self.chk_erase)
        win_main.setTabOrder(self.chk_erase, self.but_flash)
        win_main.setTabOrder(self.but_flash, self.txt_result)

    def retranslateUi(self, win_main):
        _translate = QtCore.QCoreApplication.translate
        win_main.setWindowTitle(_translate("win_main", "CamFlasher"))
        self.lbl_port.setText(_translate("win_main", "Serial port"))
        self.cbo_port.setToolTip(_translate("win_main", "Select device serial port"))
        self.chk_erase.setToolTip(_translate("win_main", "Check to erase the flash content before write firmware"))
        self.chk_erase.setText(_translate("win_main", "Erase flash"))
        self.cbo_baud.setToolTip(_translate("win_main", "Select flash baud rate"))
        self.lbl_firmware.setText(_translate("win_main", "Firmware"))
        self.lbl_baud.setText(_translate("win_main", "Baud rate"))
        self.but_flash.setToolTip(_translate("win_main", "Start the flash of firmware"))
        self.but_flash.setText(_translate("win_main", "Flash firmware"))
        self.but_firmware.setToolTip(_translate("win_main", "Select firmware file"))
        self.but_firmware.setText(_translate("win_main", "..."))
        self.txt_firmware.setToolTip(_translate("win_main", "Enter firmware file"))
